<module>
	<!-- WS Compiler: manually edited -->
	<inherits name="com.vaadin.DefaultWidgetSet" />
	<inherits name="com.google.gwt.resources.Resources" />

	<!-- Development time setting to speed up compilation -->
	<set-configuration-property name="CssResource.style"
		value="pretty" />
		
	<set-property name="user.agent" value="safari" />

<!-- 	<replace-with class="com.vaadin.addon.touchkit.gwt.client.VTouchKitView"> -->
<!-- 		<when-type-is class="com.vaadin.terminal.gwt.client.ui.VView" /> -->
<!-- 	</replace-with> -->

	<replace-with
		class="com.vaadin.addon.touchkit.gwt.client.VCustomNativeSelect">
		<when-type-is class="com.vaadin.server.gwt.client.ui.VNativeSelect" />
	</replace-with>
	
	<replace-with
        class="com.vaadin.addon.touchkit.gwt.client.TouchButton">
        <when-type-is class="com.vaadin.client.ui.button.VButton" />
    </replace-with>

<!-- 	 <replace-with class="com.vaadin.addon.touchkit.gwt.client.VRemoteDebugConsole">  -->
<!-- 		<when-type-is class="com.vaadin.client.Console" /> </replace-with> -->

	<!-- Use annotation based widget loading strategy instead of the eager method. 
		Makes initial loading time smaller on a slow network -->
 	<generate-with class="com.vaadin.addon.touchkit.gwt.TouchKitBundleLoaderFactory">
        <when-type-assignable
            class="com.vaadin.client.metadata.ConnectorBundleLoader" />
    </generate-with>


	<!-- Load css etc eagerly to avoid calc errors -->
	<entry-point
		class="com.vaadin.addon.touchkit.gwt.client.VEagerResourceLoader" />

	<define-configuration-property name='touchkit.manifestlinker.additionalCacheRoot'
		is-multi-valued='true' />
		
	<define-linker name="touchkitcachemanifest"
		class="com.vaadin.addon.touchkit.gwt.CacheManifestLinker" />
	<add-linker name="touchkitcachemanifest" />
	
	<entry-point class="com.vaadin.addon.touchkit.gwt.client.OfflineModeEntrypoint" />
	
	<add-linker name="xsiframe"/>
	<set-configuration-property name="devModeRedirectEnabled" value="true" />

</module>
