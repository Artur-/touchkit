<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>vaadin-touchkit-root</artifactId>
		<groupId>com.vaadin.addon</groupId>
		<version>${touchkit.version}</version>
		<relativePath>..</relativePath>
	</parent>

	<properties>
    	<testbench.hubhost>testbench-hub.intra.itmill.com</testbench.hubhost>
		<testbench.browsers>winxp-safari5</testbench.browsers>
	</properties>
	
	<artifactId>vaadin-touchkit-integration-tests</artifactId>
	<packaging>war</packaging>
	<name>Integration tests for vaadiin-touchkit</name>
	<dependencies>
		<dependency>
			<groupId>com.vaadin.addon</groupId>
			<artifactId>vaadin-touchkit-${license.short.name}</artifactId>
			<version>${touchkit.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.6.5</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>testbench</artifactId>
			<version>2.4.1</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/vaadin-testbench-2.4.1.jar</systemPath>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<executions>
					<!-- start and stop jetty (running our app) when running integration 
						tests -->
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run-exploded</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
							<stopKey>STOP</stopKey>
							<stopPort>8866</stopPort>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<stopPort>8866</stopPort>
							<stopKey>STOP</stopKey>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.3.0-1</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
						way compatible with e.g. . -->
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
					</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
					</hostedWebapp>
					<noServer>true</noServer>
					<!-- Remove draftCompile when project is ready -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>



			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<!-- Hackish method to retrieve the address of executing machine for 
							test bench hub -->
						<id>get-local-ip</id>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<classpath>
								<element>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.4</version>
								</element>
							</classpath>
							<source>
								java.net.InetAddress address=InetAddress.getLocalHost();
								project.properties.localIP=address.getHostAddress();
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<!-- Define some necessary system properties for testbench junit tests -->
							<systemPropertyVariables>
								<com.vaadin.testbench.tester.host>${testbench.hubhost}</com.vaadin.testbench.tester.host>
								<com.vaadin.testbench.deployment.url>${localIP}</com.vaadin.testbench.deployment.url>
								<com.vaadin.testbench.screenshot.directory>${basedir}/src/test/resources/screenshots</com.vaadin.testbench.screenshot.directory>
							</systemPropertyVariables>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- Exec plugin is used at generate-test-sourses phase to convert native 
					test bench files (.html files) to JUnit tests. -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<classpathScope>test</classpathScope>
					<mainClass>com.vaadin.testbench.util.DirectoryTestConverter</mainClass>
					<arguments>
						<argument>${project.build.directory}/testbench-generated</argument>
						<argument>${testbench.browsers}</argument>
						<argument>${basedir}/src/test/resources</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>
				<!-- testSourceRoot om exec plugin don't seem to work so we are using 
					build-helper-maven-plugin to do add generated (html to junit) test bench 
					tests to test sources -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/testbench-generated</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.1,)
										</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.groovy.maven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
